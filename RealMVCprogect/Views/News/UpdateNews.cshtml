@* @using EntityLayer.Concreat
@model List<News>

@{
    ViewData["Title"] = "UpdateNews";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card card-solid text-center">
    <div class="card-body pb-0">
        <div class="row d-flex align-items-stretch justify-content-center">
            <div class="col-12 col-sm-8 col-md-6 d-flex align-items-stretch">
                @foreach (var item in Model)
                {
                    <div class="card bg-light w-100 shadow-sm">
                        <div class="card-header text-muted border-bottom-0">
                            <h4 class="m-0">Саҳифани Таҳрирлаш</h4>
                        </div>

                        <form asp-action="UploadNews" asp-controller="News" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="newsId" value="@item.Id" />

                            <div class="card-footer">
                                <div class="form-group">
                                    <label for="short-news">Қисқача янгилик</label>
                                    <textarea id="short-news" name="title" class="form-control" rows="2">@item.Title</textarea>
                                </div>

                                <div class="form-group mt-2">
                                    <label for="detailed-news">To'liq yangilik</label>
                                    <textarea id="detailed-news" name="content" class="form-control" rows="6">@item.Content</textarea>
                                </div>
                            </div>

                            <div class="card-body pt-3 d-flex flex-column justify-content-center align-items-center position-relative" style="height: 250px; border: 3px dashed #ccc;">
                                <img id="image-preview-@item.Id" src="@((item.Images != null && item.Images.Any()) ? item.Images.First().ImagePath : "#")"
                                     alt="Rasm" class="resizable"
                                     style="max-width: 100%; max-height: 150px; display: @(item.Images != null && item.Images.Any() ? "block" : "none");">
                            </div>

                            <div class="card-footer d-flex">
                                <label class="btn btn-primary w-50 m-1" for="image-upload-@item.Id">Расм Танлаш</label>
                                <input type="file" id="image-upload-@item.Id" name="files" accept="image/*" class="d-none" multiple onchange="previewImage(event, '@item.Id')">
                            </div>

                            <button type="submit" class="btn btn-success w-50 m-1">Сақлаш</button>
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function previewImage(event, id) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('image-preview-' + id);
            output.src = reader.result;
            output.style.display = 'block';
        }
        reader.readAsDataURL(event.target.files[0]);
    }

    interact('#image-preview')
        .resizable({
            edges: { left: true, right: true, top: true, bottom: true },
            listeners: {
                move(event) {
                    let target = event.target;
                    let { width, height } = event.rect;

                    // O'lchamlarni o'zgartirish
                    target.style.width = `${width}px`;
                    target.style.height = `${height}px`;
                }
            },
            modifiers: [
                interact.modifiers.restrictSize({
                    min: { width: 50, height: 50 },  // Minimal o'lcham
                    max: { width: 600, height: 600 } // Maksimal o'lcham
                })
            ]
        })
        .draggable({
            listeners: {
                move(event) {
                    let target = event.target;
                    let x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;
                    let y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

                    target.style.transform = `translate(${x}px, ${y}px)`;
                    target.setAttribute('data-x', x);
                    target.setAttribute('data-y', y);
                }
            }
        });
</script>
 *@